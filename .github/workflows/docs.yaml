name: docs
on:
  push:
    branches:
      - develop
      - main
      - feature-stac-api
    paths:
      # Only rebuild website when docs have changed
      - 'README.md'
      - 'docs/**'
      - 'mkdocs.yml'
      - .github/**
      - 'notebooks/**'
      - 'command-line-tools/**'
      - 'cwl-workflow/**'

jobs:

  version:
  
    runs-on: ubuntu-latest

    outputs:
      app-version: ${{ steps.set-version.outputs.version }}

    steps:
    - uses: actions/checkout@v2
    - run: echo "APP_VERSION=$(cat codemeta.json | jq -r .version )" >> $GITHUB_ENV
    - run: echo app version is $APP_VERSION
    - id: set-version
      run: echo "::set-output name=version::$APP_VERSION"

  deploy:
    needs: version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout master
        uses: actions/checkout@v2

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Start Docker Daemon
        run: |
          sudo systemctl start docker

      - name: Set up Python 3.x
        uses: actions/setup-python@v2
        with:
          python-version: 3.x
      - run: pip install mkdocs-material mkdocs-mermaid2-plugin mkdocs-jupyter odc-stac ipykernel cwltool zarr matplotlib graphviz pillow cwl-loader eoap-cwlwrap plantuml cwl2puml
      - run: sudo apt update && sudo apt install -y graphviz wget
      
      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      
      - run: |
            for step in crop norm_diff otsu stac stac-zarr
            do
              if [ "$step" = "stac-zarr" ]; then 
                tag="ghcr.io/eoap/zarr-cloud-native-format/${step}:${{needs.version.outputs.app-version}}"
              else
                upstream_version="1.1.0"
                tag="ghcr.io/eoap/mastering-app-package/${step}:${upstream_version}"
              fi
              docker pull ${tag}
            done

            mkdocs gh-deploy --force
